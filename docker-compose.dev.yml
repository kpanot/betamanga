services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  backend:
    build:
      context: .
      dockerfile: ./packages/backend/Dockerfile.dev
    depends_on:
      - mongo
    volumes:
      - ./packages/backend/src:/usr/src/packages/backend/src
      - ./packages/backend/db:/usr/src/packages/backend/db
    environment:
      PORT: 3000
      MONGODB_URL: mongodb://root:example@mongo:27017/
      JWT_SECRET: secretKey
      JWT_REFRESH_SECRET: secretKey
      TOKEN_EXPIRES_IN: 1h
      REFRESH_EXPIRES_IN: 30d
    ports:
      - 3000:3000
      - 9229:9229

  # sdk:
  #   build:
  #     context: .
  #     dockerfile: ./packages/sdk/Dockerfile.dev
  #   volumes:
  #     - ./packages/sdk:/usr/src/packages/sdk

  # web:
  #   # depends_on:
  #   #   - sdk
  #   build:
  #     context: .
  #     dockerfile: ./packages/web/Dockerfile.dev
  #   volumes:
  #     - ./packages/sdk:/usr/src/packages/sdk
  #     - ./packages/web:/usr/src/packages/web
  #   ports:
  #     - 80:80
